<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd		
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	 <!-- 以下是基于AspectJ的声明式事务的配置，好处是可规范service层方法名，以及不用注解，侵入式最小，不存在给service类硬编码。 -->
	
     <!-- 事务管理器 -->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     	<property name="dataSource" ref="dataSource"></property>
     </bean>
     
     <!-- 通知 -->
     <tx:advice id="txAdvice" transaction-manager="transactionManager">
     	<tx:attributes>
     		<!-- 被增强的方法，以及指明事务传播行为：事务方法被另一个事务方法调用，这个事务方法该如何进行的规则设定 -->
     		<tx:method name="save*" propagation="REQUIRED"/>
     		<tx:method name="add*" propagation="REQUIRED"/>
     		<tx:method name="delete*" propagation="REQUIRED"/>
     		<tx:method name="insert*" propagation="REQUIRED"/>
     		<tx:method name="update*" propagation="REQUIRED"/>
     		<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
     		<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
     		<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
     		<tx:method name="count*" propagation="SUPPORTS" read-only="true"/>
     	</tx:attributes>
     </tx:advice>
     
     <!-- 通知调用者，切面（通知和切入点的结合），切入点在service层的包内类的方法进行事务控制 -->
     <aop:config>
     	<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.zengzhaoshang.service.impl.*.*(..))"/>
     </aop:config>
</beans>