<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zengzhaoshang.dao.ECheckMapper">
  <cache/>
  <resultMap id="BaseResultMap" type="cn.zengzhaoshang.entity.ECheck">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="staff_id" jdbcType="CHAR" property="staffId" />
    <result column="check_date" jdbcType="DATE" property="checkDate" />
    <result column="late_num" jdbcType="TINYINT" property="lateNum" />
    <result column="early_num" jdbcType="TINYINT" property="earlyNum" />
    <result column="absence_num" jdbcType="TINYINT" property="absenceNum" />
    <result column="leave_num" jdbcType="TINYINT" property="leaveNum" />
    <result column="trip_num" jdbcType="TINYINT" property="tripNum" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `staff_id`, `check_date`, `late_num`, `early_num`, `absence_num`, `leave_num`, 
    `trip_num`, `version`
  </sql>
  <select id="selectByExample" parameterType="cn.zengzhaoshang.entity.ECheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from e_check
    where `id` = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from e_check
    where `id` = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zengzhaoshang.entity.ECheckExample">
    delete from e_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zengzhaoshang.entity.ECheck">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into e_check (`staff_id`, `check_date`, `late_num`, 
      `early_num`, `absence_num`, `leave_num`, 
      `trip_num`, `version`)
    values (#{staffId,jdbcType=CHAR}, #{checkDate,jdbcType=DATE}, #{lateNum,jdbcType=TINYINT}, 
      #{earlyNum,jdbcType=TINYINT}, #{absenceNum,jdbcType=TINYINT}, #{leaveNum,jdbcType=TINYINT}, 
      #{tripNum,jdbcType=TINYINT}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.zengzhaoshang.entity.ECheck">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into e_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `id`,
      <if test="staffId != null">
        `staff_id`,
      </if>
      <if test="checkDate != null">
        `check_date`,
      </if>
      <if test="lateNum != null">
        `late_num`,
      </if>
      <if test="earlyNum != null">
        `early_num`,
      </if>
      <if test="absenceNum != null">
        `absence_num`,
      </if>
      <if test="leaveNum != null">
        `leave_num`,
      </if>
      <if test="tripNum != null">
        `trip_num`,
      </if>
      <if test="version != null">
        `version`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="staffId != null">
        #{staffId,jdbcType=CHAR},
      </if>
      <if test="checkDate != null">
        #{checkDate,jdbcType=DATE},
      </if>
      <if test="lateNum != null">
        #{lateNum,jdbcType=TINYINT},
      </if>
      <if test="earlyNum != null">
        #{earlyNum,jdbcType=TINYINT},
      </if>
      <if test="absenceNum != null">
        #{absenceNum,jdbcType=TINYINT},
      </if>
      <if test="leaveNum != null">
        #{leaveNum,jdbcType=TINYINT},
      </if>
      <if test="tripNum != null">
        #{tripNum,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zengzhaoshang.entity.ECheckExample" resultType="java.lang.Long">
    select count(*) from e_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e_check
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.staffId != null">
        `staff_id` = #{record.staffId,jdbcType=CHAR},
      </if>
      <if test="record.checkDate != null">
        `check_date` = #{record.checkDate,jdbcType=DATE},
      </if>
      <if test="record.lateNum != null">
        `late_num` = #{record.lateNum,jdbcType=TINYINT},
      </if>
      <if test="record.earlyNum != null">
        `early_num` = #{record.earlyNum,jdbcType=TINYINT},
      </if>
      <if test="record.absenceNum != null">
        `absence_num` = #{record.absenceNum,jdbcType=TINYINT},
      </if>
      <if test="record.leaveNum != null">
        `leave_num` = #{record.leaveNum,jdbcType=TINYINT},
      </if>
      <if test="record.tripNum != null">
        `trip_num` = #{record.tripNum,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        `version` = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e_check
    set `id` = #{record.id,jdbcType=CHAR},
      `staff_id` = #{record.staffId,jdbcType=CHAR},
      `check_date` = #{record.checkDate,jdbcType=DATE},
      `late_num` = #{record.lateNum,jdbcType=TINYINT},
      `early_num` = #{record.earlyNum,jdbcType=TINYINT},
      `absence_num` = #{record.absenceNum,jdbcType=TINYINT},
      `leave_num` = #{record.leaveNum,jdbcType=TINYINT},
      `trip_num` = #{record.tripNum,jdbcType=TINYINT},
      `version` = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zengzhaoshang.entity.ECheck">
    update e_check set
      <if test="staffId != null">
        `staff_id` = #{staffId,jdbcType=CHAR},
      </if>
      <if test="checkDate != null">
        `check_date` = #{checkDate,jdbcType=DATE},
      </if>
      <if test="lateNum != null">
        `late_num` = #{lateNum,jdbcType=TINYINT},
      </if>
      <if test="earlyNum != null">
        `early_num` = #{earlyNum,jdbcType=TINYINT},
      </if>
      <if test="absenceNum != null">
        `absence_num` = #{absenceNum,jdbcType=TINYINT},
      </if>
      <if test="leaveNum != null">
        `leave_num` = #{leaveNum,jdbcType=TINYINT},
      </if>
      <if test="tripNum != null">
        `trip_num` = #{tripNum,jdbcType=TINYINT},
      </if>
      `version` = `version` + 1
	  where `id` = #{id,jdbcType=CHAR} AND `version` = #{version,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zengzhaoshang.entity.ECheck">
    update e_check
    set `staff_id` = #{staffId,jdbcType=CHAR},
      `check_date` = #{checkDate,jdbcType=DATE},
      `late_num` = #{lateNum,jdbcType=TINYINT},
      `early_num` = #{earlyNum,jdbcType=TINYINT},
      `absence_num` = #{absenceNum,jdbcType=TINYINT},
      `leave_num` = #{leaveNum,jdbcType=TINYINT},
      `trip_num` = #{tripNum,jdbcType=TINYINT},
      `version` = #{version,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=CHAR}
  </update>
</mapper>