<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zengzhaoshang.dao.ETrainMapper">
  <cache/>
  <resultMap id="BaseResultMap" type="cn.zengzhaoshang.entity.ETrain">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="dept_id" jdbcType="CHAR" property="deptId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="number" jdbcType="SMALLINT" property="number" />
    <result column="outlay" jdbcType="VARCHAR" property="outlay" />
    <result column="is_finish" jdbcType="TINYINT" property="isFinish" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.zengzhaoshang.entity.ETrain">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `dept_id`, `name`, `date`, `place`, `teacher`, `number`, `outlay`, `is_finish`, 
    `version`
  </sql>
  <sql id="Blob_Column_List">
    `content`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.zengzhaoshang.entity.ETrainExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from e_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.zengzhaoshang.entity.ETrainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from e_train
    where `id` = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from e_train
    where `id` = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zengzhaoshang.entity.ETrainExample">
    delete from e_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zengzhaoshang.entity.ETrain">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into e_train (`dept_id`, `name`, `date`, 
      `place`, `teacher`, `number`, 
      `outlay`, `is_finish`, `version`, 
      `content`)
    values (#{deptId,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{place,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, #{number,jdbcType=SMALLINT}, 
      #{outlay,jdbcType=VARCHAR}, #{isFinish,jdbcType=TINYINT}, #{version,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zengzhaoshang.entity.ETrain">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into e_train
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `id`,
      <if test="deptId != null">
        `dept_id`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="place != null">
        `place`,
      </if>
      <if test="teacher != null">
        `teacher`,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="outlay != null">
        `outlay`,
      </if>
      <if test="isFinish != null">
        `is_finish`,
      </if>
      <if test="version != null">
        `version`,
      </if>
      <if test="content != null">
        `content`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="deptId != null">
        #{deptId,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=SMALLINT},
      </if>
      <if test="outlay != null">
        #{outlay,jdbcType=VARCHAR},
      </if>
      <if test="isFinish != null">
        #{isFinish,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zengzhaoshang.entity.ETrainExample" resultType="java.lang.Long">
    select count(*) from e_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e_train
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.deptId != null">
        `dept_id` = #{record.deptId,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.place != null">
        `place` = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null">
        `teacher` = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=SMALLINT},
      </if>
      <if test="record.outlay != null">
        `outlay` = #{record.outlay,jdbcType=VARCHAR},
      </if>
      <if test="record.isFinish != null">
        `is_finish` = #{record.isFinish,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        `version` = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        `content` = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update e_train
    set `id` = #{record.id,jdbcType=CHAR},
      `dept_id` = #{record.deptId,jdbcType=CHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      `place` = #{record.place,jdbcType=VARCHAR},
      `teacher` = #{record.teacher,jdbcType=VARCHAR},
      `number` = #{record.number,jdbcType=SMALLINT},
      `outlay` = #{record.outlay,jdbcType=VARCHAR},
      `is_finish` = #{record.isFinish,jdbcType=TINYINT},
      `version` = #{record.version,jdbcType=INTEGER},
      `content` = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e_train
    set `id` = #{record.id,jdbcType=CHAR},
      `dept_id` = #{record.deptId,jdbcType=CHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      `place` = #{record.place,jdbcType=VARCHAR},
      `teacher` = #{record.teacher,jdbcType=VARCHAR},
      `number` = #{record.number,jdbcType=SMALLINT},
      `outlay` = #{record.outlay,jdbcType=VARCHAR},
      `is_finish` = #{record.isFinish,jdbcType=TINYINT},
      `version` = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zengzhaoshang.entity.ETrain">
    update e_train set
      <if test="deptId != null">
        `dept_id` = #{deptId,jdbcType=CHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        `place` = #{place,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        `teacher` = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=SMALLINT},
      </if>
      <if test="outlay != null">
        `outlay` = #{outlay,jdbcType=VARCHAR},
      </if>
      <if test="isFinish != null">
        `is_finish` = #{isFinish,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        `content` = #{content,jdbcType=LONGVARCHAR},
      </if>
      `version` = `version` + 1
	  where `id` = #{id,jdbcType=CHAR} AND `version` = #{version,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zengzhaoshang.entity.ETrain">
    update e_train
    set `dept_id` = #{deptId,jdbcType=CHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      `place` = #{place,jdbcType=VARCHAR},
      `teacher` = #{teacher,jdbcType=VARCHAR},
      `number` = #{number,jdbcType=SMALLINT},
      `outlay` = #{outlay,jdbcType=VARCHAR},
      `is_finish` = #{isFinish,jdbcType=TINYINT},
      `version` = #{version,jdbcType=INTEGER},
      `content` = #{content,jdbcType=LONGVARCHAR}
    where `id` = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zengzhaoshang.entity.ETrain">
    update e_train
    set `dept_id` = #{deptId,jdbcType=CHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      `place` = #{place,jdbcType=VARCHAR},
      `teacher` = #{teacher,jdbcType=VARCHAR},
      `number` = #{number,jdbcType=SMALLINT},
      `outlay` = #{outlay,jdbcType=VARCHAR},
      `is_finish` = #{isFinish,jdbcType=TINYINT},
      `version` = #{version,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=CHAR}
  </update>
</mapper>